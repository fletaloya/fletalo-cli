#!/usr/bin/env bash

FYPORT=9876
URI=${API_URI:-https://api.fletaloya.com}

STATE=$(dd if=/dev/urandom count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-30)
NONCE=$(dd if=/dev/urandom count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-30)

API_KEY=***REMOVED***
CLIENT_ID=146427219997-e3rht0fs4q35koob8jg5qh6f5qtc7l05.apps.googleusercontent.com

# Open the google auth sign in in a browser
open "https://accounts.google.com/o/oauth2/v2/auth?response_type=id_token&client_id=$CLIENT_ID&scope=openid%20email&redirect_uri=http%3A//localhost%3A$FYPORT&state=$STATE&nonce=$NONCE"

# First callback: get the google id token from the location fragment and call again
RESPONSE="HTTP/1.1 200 OK\r\nConnection: keep-alive\r\n\r\n
<script type='text/javascript'> \n
  var params = {}, postBody = location.hash.substring(1), regex = /([^&=]+)=([^&]*)/g, m; \n
  while (m = regex.exec(postBody)) { \n
    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]); \n
  } \n

  //TODO: check state && nonce

  window.location.href = window.location.pathname + '?google_id_token=' + params['id_token']; \n
</script>
OK\r\n"

# Wait for google auth response, which generates a new request
echo -en "$RESPONSE" | nc -c -l $FYPORT > /dev/null

# Second callback: recover the google id token
RESPONSE="HTTP/1.1 200 OK\r\nConnection: keep-alive\r\n\r\nAuthenticated! Close this window!"
GOOGLE_ID_TOKEN=$(echo -en "$RESPONSE" | nc -c -l $FYPORT | head -1|cut -d ' ' -f 2)

GOOGLE_ID_TOKEN=${GOOGLE_ID_TOKEN:18}

# Get a firebase token
FIREBASE_TOKEN=$(curl -s "https://identitytoolkit.googleapis.com/v1/accounts:signInWithIdp?key=$API_KEY" -H 'Content-Type: application/json' --data-binary '{"postBody":"id_token='$GOOGLE_ID_TOKEN'&providerId=google.com","requestUri":"http://localhost","returnIdpCredential":true,"returnSecureToken":true}'|jq -r '.idToken')

# Get a custom token with the user roles as claims
CUSTOM_TOKEN=$(curl -s -X GET "$URI/token?authorization=$FIREBASE_TOKEN" |jq -r '.customToken')

# Exchange the custom token for an ID Token
export DATA=$(curl -s "https://identitytoolkit.googleapis.com/v1/accounts:signInWithCustomToken?key=$API_KEY" -H 'Content-Type: application/json' --data-binary '{"token":"'$CUSTOM_TOKEN'","returnSecureToken":true}')
export FYTOKEN=$(echo $DATA|jq -r '.idToken')
export FYREFRESH=$(echo $DATA|jq -r '.refreshToken')

# Save Token and RefreshToken
echo $FYTOKEN > $HOME/.fytoken
echo $FYREFRESH > $HOME/.fyrefresh

echo "Authenticathed! Now you can use our API!"
